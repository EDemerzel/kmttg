#labels Featured
=CONFIGURING KMTTG=

*NOTE: This documentation is updated to match latest kmttg release only.*
<br><br>
*This step is very important and must be run at least the first time you start kmttg.*

  * Start kmttg if you have not done so already.
  * From *File* pulldown menu select *Configure…*
  * Adjust settings according to your environment. Many of the 3rd party tools are installed automatically for Windows & Mac platforms (and auto-detected on Linux platforms if available), but some tools such as VideoRedo and t2extract are not setup by default and must be user defined if you have them installed and wish to use them.
  * If you did not specify *MAK* during first launch you should enter proper *MAK* value under *Other* tab and define *.TiVo* dir (where to save download .TiVo files) under *File Settings* tab.
  NOTE: As of version 0.7a kmttg will automatically detect any Tivos on your network and add them to Tivos list, but you can optionally add tivos yourself if you wish. If your Tivo IP assignments change dynamically due to IP renewal kmttg will detect and adjust them automatically as well.

  NOTE: You can specify different output directories for .TiVo files, .mpg files and encoded files if you wish or you can set them all the same.

  NOTE: For file and directory fields you can double-click in the field to bring up a File Browser to help locate files/directories.

  * OK the form when you have completed your configuration. This will save your settings to config.ini file so they will be remembered next time you run kmttg.

==<u>Tivos tab (MANUALLY ENTERING TIVO NAMES AND IP NUMBERS)</u>==
  * Starting with version 0.6e the configuration window now has tabs. Select the *Tivos* tab to see options related to your networked Tivos.
  * Starting with version 0.6a kmttg will automatically detect and add Tivos on your network, so you can choose to skip steps below that detail how to manually add tivos to kmttg.
  * Supply a Tivo name in the *Tivo Name* field and the associated Tivo IP number in the *Tivo IP#* field.
  EXAMPLE: *Tivo Name = Bedroom   Tivo IP# = 192.168.1.101*
  * You can find Tivo IP numbers for each of your Tivos as follows:
  Tivo Central—Messages&Settings—Settings—Phone&Network: IP addr
  * Click on *ADD* button to add the entry to the Tivos list
  * If you want to remove entries, then select them in the Tivos list and click on *DEL* button.

==Start NPL jobs when starting kmttg GUI==
  * This option became available starting with version 0p8e. If enabled then NPL jobs are automatically started when kmttg GUI starts (as has been the case for past kmttg releases).

  * If disabled then NPL jobs will not be started automatically, which means NPL tables will not be populated until you manually start NPL jobs by clicking on *Refresh* button for each TiVo of interest. This also applies to newly discovered TiVos - a new tab will be displayed with an empty table.

==Look for Tivos on network==
  * If this option is enabled then kmttg will check for Tivo MDNS (Bonjour) broadcasts to automatically detect Tivos on your network. kmttg will now also detect IP changes and adjust settings automatically for you when this option is enabled. You can optionally choose to disable this feature and add tivos manually to kmttg if you wish.

==Detect with TiVo Beacon instead of Bonjour==
  * If enabled this uses the older Tivo Beacon mechanism for detecting networked TiVos rather than the newer Bonjour method. Useful if Bonjour is not working on your network for some reason.

==Enable iPad style communications with this TiVo==
  * When enabled kmttg will attempt to communicate with this TiVo using the reverse engineered iPad protocol. This unlocks a lot of extra capabilities, many of which are available using the kmttg Remote Control. Aside from the Remote Control this also enables ability to play and delete shows from kmttg Now Playing List table. Select a show in the table and then you can use the keyboard *space* and *delete* keys to play and delete shows respectively.
  * When you enable at least 1 Premiere with this option you will see a new *Remote* tab in the main kmttg window available. That tab then has a bunch of sub-tabs with different functions. See the [remote_control] Wiki page for additional information on how to use the various remote tabs.
  * *NOTE: This only works with TiVo Premiere units.*

==limit # of npl fetches==
  * This is useful if your TiVo has a lot recorded shows and you don't care about older shows and want to speed up NPL retrieval by limiting # of shows retrieved.
  * With default setting of 0 all shows are retrieved as normal.
  * A setting of 1 means limit to 1 fetch (128 most recent shows).
  * A setting of 2 means limit to 2 fetches (256 most recent shows).
  etc.

  NOTE: The *Disk Usage* totals will obviously not be complete if you set this > 0

==wan http port & wan https port==
  * Allow you to specify the WAN (public) side ports to use when kmttg uses http & https protocols to communicate with TiVos. By configuring your router to port forward to port 80 (http) and port 443 (https) on your home network from WAN side and using these settings you can run kmttg from any internet location and still access Now Playing Lists on your home TiVos and even download shows if you wish (and your ISP upstream bandwidth is high enough to make it feasible).

   NOTE: In order to save these settings for a TiVo make sure the associated TiVo is selected in the *Tivos* list and then OK the configuration window. Repeat for each TiVo in the list you wish to access over internet.

==wan ipad port==
  * Allows you to specify a WAN (public) side port to use when kmttg uses iPad protocol to communicate with TiVo Premieres. By configuring your router to port forward to port 1413 on your home network from WAN side and using this setting you can run kmttg from any internet location and use the iPad protocol with your Premiere units.

   NOTE: In order to save these settings for a TiVo make sure the associated TiVo is selected in the *Tivos* list and then OK the configuration window. Repeat for each TiVo in the list you wish to access over internet.

==<u>File Settings tab</u>==

*NOTE: For Windows users you can use network paths for output folders, but just make sure to use UNC style paths (\\server\share) instead of volumes (h:\share) since Windows services doesn't know about network volumes.*

==Remove .TiVo file after decrypt==
  * Enable this option if you would like kmttg to remove .TiVo files automatically once they have been successfully decrypted to .mpg format.

==Remove Ad Detect files after Ad Cut==
  * Enable this option if you would like kmttg to remove *Ad Detect* related files once *Ad Cut* task completes successfully.

==Remove .mpg file after Ad Cut==
  * Enable this option if you would like kmttg to remove .mpg file once *Ad Cut* task completes successfully.

==Remove .mpg file after encode==
  * If you use encode you can enable this option if you would like kmttg to remove .mpg files automatically once they have been successfully re-encoded.

==For QS Fix of .mpg file backup original .mpg==
  * If running QS Fix on a .mpg file kmttg will rename the original .mpg file to .mpg.bak if this option is enabled. Otherwise by default kmttg removes the original .mpg file and replaces with the fixed version following successful QS Fix run.
  * NOTE: If .mpg.bak file already exists then .mpg.bak1, .mpg.bak2, etc. will be used instead.

==Check Available Disk Space==
  * If this option is enabled then kmttg will check that destination drive has more than the space available defined in *Min req space (GB)* field before running jobs. The available space calculation currently also subtracts estimated space to be taken by any ongoing .TiVo file downloads. (Currently no other jobs other than downloads are considered when estimating space to be consumed).

==File Naming==
  * This defines how file names will look for downloaded shows. Certain keywords are provided which you specify within square brackets that will be substituted accordingly. The choices for those you can see in the *Available keywords* cyclic. Choosing an entry from *Available keywords* will insert it in the File Naming field. You can use almost any other characters you want (*avoid quotes!*) and arrange the keywords in any order you like.
  * EXAMPLE:  Let’s say you have a recorded show as follows:
*Mon 3/24/2008 at 8:00pm called “The Big Bang Theory – The Loobenfeld Decay” on 702=KCBSDT, Duration=30 mins, EpisodeNumber=302, originalAirDate=2007-11-20*<br>
`Keywords in this example are:`<br>
`[title] = The Big Bang Theory – The Loobenfeld Decay`<br>
`[mainTitle] = The Big Bang Theory`<br>
`[episodeTitle] = The Loobenfeld Decay`<br>
`[channelNum] = 702`<br>
`[channel] = KCBSDT`<br>
`[min] = 00`<br>
`[hour] = 20`<br>
`[wday] = Mon`<br>
`[mday] = 24`<br>
`[month] = Mar`<br>
`[monthNum] = 03`<br>
`[year] = 2008`<br>
`[originalAirDate] = 2007-11-20`<br>
`[EpisodeNumber] = 302`<br>

So continuing with above example, if I set:<br>
*`File Naming = [title] (Recorded [month] [mday],[year],[channel])`*<br>
The `.TiVo` file name would become:<br>
*`The Big Bang Theory – The Loobenfeld Decay (Recorded Mar 17,2008,KABCDT).TiVo`*<br>

The `[/]` keyword is a folder separator which allows you to create custom sub-folder names as part of the output file definition. Continuing above example:<br>
*`File Naming = [mainTitle][/][year]_[monthNum]_[mday] [episodeTitle]`*<br>
The `.TiVo` file name would become (using Windows folder structure note the resulting sub-folder structure):<br>
*`The Big Bang Theory\2008_03_24 The Loobenfeld Decay.TiVo`*

*originalAirDate NOTE:* For titles for which kmttg does not have originalAirDate, kmttg will use *{{{[year]-[monthNum]-[mday]}}}* construct instead.

*NOTE: If you are not careful with file naming and don't include keywords that are always present for every show it is possible you end up with an empty file. So for example if you only use episodeTitle keyword then shows that don't have episode titles will result in an empty string. Starting with version 0p7c kmttg will now issue an error and not process files that end up as an empty string with just a file extension. In previous releases kmttg would continue anyway.*

*NOTE: There are several special characters that are not allowed by kmttg for various reasons to be part of file names. The following set of characters are discarded from file names (note some of these starting only in release v0p7h):<br>
{{{* " ' : ; ! ? \ $ [ ] ` ^}}}<br>
In addition the following characters are mapped as:<br>
{{{/ < > | map to _}}}<br>
{{{& maps to and}}}*

==Advanced File Naming==

By request some more advanced keyword processing was introduced to allow for conditional text.
  * You can define multiple space separated fields within square brackets.
  * Fields surrounded by quotes are treated as literal text.
  * A single field with no quotes should be supplied which represents a conditional keyword
  * If that keyword is available for the show in question then the keyword value along with any literal text surrounding it will be included in file name.
  * If the keyword evaluates to null then the entire advanced keyword becomes null. 
  * For example:<br>
`[mainTitle]`*`["_Ep#" EpisodeNumber]`*`_[wday]_[month]_[mday]`<br>

The advanced keyword is highlighted in bold and signifies only include `“_Ep#xxx”` if `EpisodeNumber` exists for the show in question. `“_Ep#”` is literal string to which the evaluated contents of `EpisodeNumber` keyword are appended. If `EpisodeNumber` does not exist then the whole advanced keyword evaluates to empty string.

==FILES Default Path==
  * Defines where you would like the file browser to start from in FILES mode.
  * NOTE: You can use this option without having any Tivos defined if you wish.

==.TiVo Output Dir==
  * REQUIRED if you plan to download files from Tivo Now Playing lists.
  * This defines where your Tivo Now Playing List files will be downloaded to.
  * NOTE: Make sure you have plenty of space here

==.mpg Output Dir==
  * REQUIRED if you plan to decrypt .TiVo files
  * This defines where the decrypted .mpg files will be saved
  * NOTE: Make sure you have plenty of space here
  * NOTE: This can be same as .TiVo Output Dir

==.mpg Cut Dir==
  * REQUIRED if you plan to run the comcut step
  * This defines where the comcut commercial stripped .mpg file will be saved
  * NOTE: If this is defined as a different directory than *.mpg Output Dir* then the *{{{_cut}}}* suffix is not used for the output mpeg file name for the *Ad Cut* task.
  * NOTE: Make sure you have plenty of space here
  * NOTE: This can be same as .TiVo Output Dir

==Encode Output Dir==
  * REQUIRED if you plan to re-encode .mpg files to other formats
  * This defines where re-encoded files will be saved
  * NOTE: Make sure you have plenty of space here
  * NOTE: This can be same as .TiVo Output Dir or .mpg Output Dir

==auto log file size limit (MB)==
  * This option is used to limit the size (number of MBytes) of the auto transfers log file: *auto.log.0*. Once the given limit is reached the file is copied to *auto.log.1* and *auto.log.0* is reset. By having a reasonable limit (defaults to 10 MBytes) this prevents the auto log file from growing too large.

==Overwrite existing files==
  * With this option disabled kmttg will skip tasks for which output files already exist so as not to overwrite any existing files of same name on your computer. With this option enabled kmttg will run tasks regardless of whether their output files exist or not, overwriting existing files as needed.
  * *NOTE: It is highly recommended you enable this option if setting up Auto Transfers as when Auto Transfers are interrupted that can leave partial files created that you would want Auto Transfers to overwrite*

==<u>Programs tab</u>==

==curl==
  * REQUIRED if you plan to download files from Tivo Now Playing lists.
  * Adjust to match the full path to the curl binary if you plan to download files
  * NOTE: For Windows users who installed the tools zip file this should not have to change.
  * NOTE: Most Linux installations already have curl installed under */usr/bin/curl*

==tivodecode==
  * REQUIRED if you plan to decrypt .TiVo files to .mpg
  * Adjust to match the full path to the tivodecode binary.
  * NOTE: For Windows users who installed the tools zip file this should not have to change.

==mencoder (optional)==
  * REQUIRED if you plan to enable “comcut” in kmttg.
  * Supply the full path to the mencoder binary.
  * mencoder is used if you select the “comcut” option in kmttg to automatically cut out commercial segments detected by comskip.
  * NOTE: You are better off using an mpeg2 editor if you want precise cuts and in sync audio/video. The combination of comskip and comcut can work well for some shows but not well at all for others. On occasion I find mencoder can produce out of sync audio/video files.

==ffmpeg (optional)==
  * If you plan on re-encoding mpeg2 files to a different format using kmttg and ffmpeg encoding profiles then you should define here the full path to ffmpeg here. All the kmttg pre-defined encoding profiles starting with “ff_” prefix use ffmpeg as their encoding engine.
  * NOTE: For Windows users ffmpeg is included as part of the tools zip file.
 
==handbrake (optional)==
  * If you plan on re-encoding mpeg2 files to a different format using kmttg and handbrake encoding profiles then you should define here the full path to HandBrakeCLI here. All the kmttg pre-defined encoding profiles starting with “hb_” use handbrake as their encoding engine.
  * NOTE: For Windows users handbrake is included as part of the tools zip file.

==comskip (optional)==
  * REQUIRED if you plan to use comskip.
  * comskip is a public domain program that can scan an mpeg2 file and detect commercials. With default configuration it will produce a .edl file which can be fed to *mencoder* to cut out detected commercial segments.
  * NOTE: comskip can be configured to output several other files too such as a bookmark .mls file for Womble Mpeg Video Wizard or a cut file for VideoRedo. Consult comskip documentation for details.
  * NOTE: Accuracy varies greatly depending on the show. Comskip is most useful to use as an initial guess as to where cut points should be made. Ideally you should then use Womble, VRD or similar editor to adjust the cut points as needed.

==comskip.ini (optional)==
  * REQUIRED if you plan to use comskip.
  * Supply the full path to the comskip.ini file you wish to use. Comskip has many configuration options and you may want to use different .ini files for different shows for best results.

==t2extract/ccextractor==
  * For windows systems if you specify the full path to T2Sami *t2extract.exe* program this will enable the *captions* option to extract closed captions from video files.
  * For windows or other systems you can specify full path to ccextractor executable instead to enable *captions* task in kmttg. Aside from being supported on multiple platforms ccextractor is being currently developed/supported and does a better job than T2Sami at extracting captions.
  * kmttg will recognize if ccextractor is being used instead of T2Sami by looking for "ccextractor" string in executable name.

==AtomicParsley==
  * If you specify the full path to AtomicParsley executable then some meta data information will be automatically added to mp4 files following encode step.
  * NOTE: This will only work if you have pyTivo metadata available for the file since kmttg will look for file.mp4.txt file to get information it needs for AtomicParsley run.

==ProjectX==
  * As an alternative to using the commercial VideoRedo software for *QS Fix* task you can configure kmttg to use ProjectX for that task. If you plan on any further processing of .mpg files such as cutting out commercials or re-encoding to different format it’s useful to run the file through QS fix first to fix any potential glitches in the .mpg file that may cause issues. By configuring kmttg for ProjectX it will also be used instead of mencoder for the *Ad Cut* task. ProjectX does a much better job of cutting out commercials while keeping proper audio/video sync.
  * NOTE: ProjectX is included in the Windows and Mac kmttg tools zip file along with other tools used by kmttg but can also easily be found on the web. You need to configure the full path to ProjectX.jar file that is part of ProjectX installation.

==custom command==
  * Here you can setup any script you want to run as a post-processing step to all other tasks. You can use certain pre-defined keywords in square brackets as arguments to your script if you wish which kmttg will replace with the associated full path file names. The supported keywords are listed in the *Available file args* cyclic.

==<u>Program Options tab</u>==

==MAK==
  * REQUIRED if you plan to download files from Tivo Now Playing lists.
  * Your Tivo Media Access Key. You can find the number on any of your Tivos:
  Tivo Central—Messages&Settings—Account&System Information—Media Access Key

==active job limit==
  * Limits the number of CPU intensive jobs that can kmttg can run in parallel to this setting (defaults to 2). If you want to allow more CPU intensive jobs to run at the same time (for example if you have a multi-core processor) you can increase this limit accordingly. Be careful not to overwhelm your computer by setting this number too high.

==encoding cpu cores===
  * Specify the number of cpu cores to use for encoding jobs. If you have a multi-core machine this can speed up encoding jobs quite significantly. Consider this setting and *active job limit* when deciding what number to use here. Setting this too high may really slow down your machine for other tasks running in parallel.

==t2extract extra arguments==
  * Any extra arguments you want kmttg to use when running *t2extract* which is the program used to generate closed captions *.srt* file. By default the program arguments are as follows:
  {{{t2extract -f srt videoFile}}}
  * Extra arguments you supply are added following the *-f srt* option.
  * NOTE: kmttg expects *srt* as output file. If you want to output a different format then consider using *custom* job to run t2extract with whatever arguments you want.

==mencoder Ad Cut extra args==
  * Any extra arguments you want kmttg to use when running *mencoder* for the Ad Cut (comcut) task. NOTE: If you have VideoRedo configured then VideoRedo is used for Ad Cut so this setting will not be relevant. The default mencoder arguments for the Ad Cut task are as follows:
  {{{mencoder videoFile -edl edlFile -oac copy -ovc copy -of mpeg -vf harddup -o mpegFile_cut}}}
  * Extra argument you suppy are added following the *-vf harddup* option.

==# download attempts==
  * Number of times to attempt to download a TiVo file (in case download attempt fails). If you only want 1 attempt then set this to 1 or 0.
  * NOTE: Occasionally TiVo downloads may fail due to *Server Busy* or other such errors reported by TiVo web server, but in some cases trying a download again after a short delay will work.

==seconds between download retry attempts==
  * Number of seconds to wait between download retry attempts. kmttg will wait at least this number of seconds before trying a download again.

==start delay in seconds for download tasks==
  * This delay applied to all download tasks is needed to help relieve stress on TiVo server when there are multiple downloads queued up from same TiVo to help avoid *server busy* error messages. Before starting a download task kmttg will wait the configured number of seconds (defaults to 10) before initiating the download.

==metadata files==
  * By default kmttg with *metadata* task enabled will only create a pyTivo metadata file for the last video file in the sequence of tasks you enable for processing an entry. That corresponds to *last* setting of this option. You can change that behavior by using various settings for this option:
  * *mpegFile* - Generate only for {{{.mpg}}} file after decrypt step if enabled
  * *mpegFile_cut* - Generate only for {{{_cut.mpg}}} file after AdCut step if enabled
  * *encodeFile* - Generate only for encoded video file after encode step if enabled
  * *last* - Generate only for last video file in the task set (the default setting)
  * *all* - Generate for all available video files in the task set (except .TiVo files)

==extra metadata entries (comma separated)==
  * Allows you to specify one or more key:value pairs to be added by kmttg when creating pyTivo metadata files. This could be useful for example if you want to add "image:folder.jpg" line automatically to every metadata file for cases when you have folder images and you want AtomicParsley to add the image to video metadata as specified in the pyTivo metadata file.
  * If you have more than 1 entry to add you can do so by separating key:value pairs with a comma character, for example:
    * name1:value1,name2:value2

==Enable TivoWebPlus Delete task==
  * If you have TivoWebPlus configured for your TiVo(s) then if you enable this option an optional *TWP Delete* task is made available in the kmttg GUI or auto transfers task set.
  * When *TWP Delete* task is enabled a TivoWebPlus http call to delete a show on your source TiVo will be issued following a successful decrypt of a downloaded TiVo file.
  * NOTE: Once you set and save this option you must restart kmttg to see the change. 

==Enable iPad style delete task==
  * If you have a Premiere and *Enable iPad style communications with this TiVo* option enabled for a Premiere TiVo in kmttg then if you enable this option an optional *iPad Delete* task is made available in the kmttg GUI and auto transfers task set.
  * When *iPad Delete* task is enabled the iPad communications protocol is used to delete a show on your source TiVo (Premieres only) following a successful decrypt of a downloaded TiVo file.
  * NOTE: Once you set and save this option you must restart kmttg to see the change. 

==Download TiVo files in Transport Stream format==
  * For TiVo software that supports it, this forces TiVo file downloads to use Transport Stream format instead of the default Program Stream format by adding a *&Format=video/x-tivo-mpeg-ts* tag to the download URL.
  * Currently only Australia/New Zealand and Premiere TiVos support Transport Stream format so enabling this on other TiVos will have no effect.
  * *NOTE: For Premiere units it is still much more reliable to download in traditional Program Stream format, so you are advised not to enable this option if you want to be sure there are no issues with download and/or decryption.*
  * NOTE: One advantage of TiVo Transport Stream format is downloads are quite significantly faster than Program Stream format downloads.
  * NOTE: Latest version of *tivodecode* shipped with kmttg does have support for decrypting TiVo Transport Stream files but there are sometimes issues with it, so it's safer to download in Program Stream format instead to avoid potential issues.
  * NOTE: If you have VideoRedo TVSuite4 and at least minimal install of TiVo Desktop you can use it to decrypt downloads in TS format instead of tivodecode (see *VideoRedo* tab for an option to enable that).

==Use Java for downloads instead of curl==
  * If enabled then kmttg will use native Java methods for retrieving Now Playing lists and downloading shows from TiVos instead of using curl. May be useful if for some reason you are having issues with curl (though most likely when there are issues with curl downloads it's likely a network/TiVo server issue and not issue with curl itself).

==Show estimated time remaining for downloads==
  * When this option enabled the estimated time remaining for downloads is shown in STATUS column instead of the download bit rate.

  NOTE: Since TiVo does not report accurate file size to be downloaded this number is only an estimate and will never actually reach 0.

==Combine download and tivodecode decrypt==
  * If enabled then download & tivodecode steps are combined into 1 if you have *decrypt* task selected and you are performing a download (i.e. TiVo file creation is bypassed).
  NOTE: This only applies if you have not configured VideoRedo for decrypt instead of tivodecode.

==Allow only 1 download at a time==
  * If enabled then kmttg will only download 1 program at a time no matter how many TiVos you have and how many download tasks are queued up.

==Automatically restore job queue between sessions==
  * If enabled kmttg will save any currently queued jobs to a file when terminated and automatically queue up those jobs next time kmttg is started. This is useful in Auto Transfers mode when service is interrupted and you would like queued jobs to resume when service is re-started.

==Use comskip GUI to review detected commercials==
  * When this is enabled, following *Ad Detect* task that uses comskip kmttg will bring up comskip visual editor that allows you to review and make modifications to the detected commercials visually. Consult [http://code.google.com/p/kmttg/wiki/comskip_commercial_editing comskip_commercial_editing] Wiki page for a summary of how to use the comskip visual editor.

==<u>Visual tab</u>==

==look and feel==
  * Choose among different GUI styles supported by your Java installation. The *default* entry uses the *Metal* cross-platform look and feel that has been the default for kmttg.
  * Mac platform actually uses its own look and feel for default different than *Metal*, so changing to a non-default setting and then changing back to default will result in *Metal* look and feel being selected.
  * kmttg GUI was created under *Metal* look and feel, so it's possible other choices may not look or behave as intended.

==GUI Font Size==
  * Sets the text font size for all GUI text components. Should be an integer of reasonable size. Default value is 12.

==toolTip timeout (secs)==
  * Set the amount of time that a toolTip will display before disappearing.

==Min # Channel Digits==
  * Sets minimum number of digits to use for channel numbers. Leading channel number will be padded with zeros if shorter than this number. For example:
      {{{
         1 => channel 2 = 2;    channel 704 = 704
         2 => channel 2 = 02;   channel 704 = 704
         3 => channel 2 = 002;  channel 704 = 704
         4 => channel 2 = 0002; channel 704 = 0704
      }}}

==Display toolTips==
  * Enable or disable mouse over toolTips which are text tips that appear when you move the mouse over an item in the GUI.

==Show full paths in Job Monitor==
  * If you don't care to see full path names of files in Job Monitor table you can disable this option. kmttg will then only show the full file name without the path to the file in the Job Monitor. This is useful especially if you have very long path names configured.

==Do not show copy protected files in table==
  * Enabling this option filters out copy protected shows from being listed in TiVo Now Playing Lists.

==Auto size NPL column widths==
  * If this option is enabled then NPL table column widths are automatically sized to fit text. If disabled then column widths are not auto sized and user can set their preferred fixed widths, and the column widths are saved between GUI sessions.

==<u>VideoRedo tab (Windows only)</u>==

==VideoRedo path==
  * If you have VideoRedo program available you can supply the path to your VideoRedo installation directory to enable the “QS fix” option which stands for `VideoRedo` Quickstream Fix. If you plan on any further processing of .mpg files such as cutting out commercials or re-encoding to different format it’s useful to run the file through QS fix first to fix any potential glitches in the .mpg file that may cause issues. Note that “QS fix” will only be enabled once you supply a valid path to VideoRedo installation or alternatively configure kmttg for ProjectX. By configuring kmttg for VideoRedo it also means VideoRedo will be used instead of mencoder for the Ad Cut step. VideoRedo does a much better job of cutting out commercials while keeping proper audio/video sync.
  * Example path setting (on Vista):
  `C:\Program Files (x86)\VideoRedoPlus`

==Use VideoRedo AdScan instead of comskip==
  * If you have VideoRedo configured for use by kmttg then enabling this option instructs kmttg to use *VideoRedo AdScan* instead of comskip program for the Ad Scan step.

==Use VideoRedo GUI to review detected commercials==
  * If you have VideoRedo configured for use by kmttg then enabling this option instructs kmttg to start VideoRedo GUI following the *Ad Detect* job so that you can manually inspect/correct the detected commercial segments. If you do make changes be sure to save the changes to the same VPrj file before exiting VideoRedo (*Ctrl-P* shortcut). kmttg will wait until you close VideoRedo GUI before proceeding with next set of jobs.
  NOTE: This setting only applies to GUI mode. In auto transfers mode this setting has no effect.

==Bring up VideoRedo GUI to make manual cuts==
  * If you have VideoRedo and have configured kmttg with the installation path to VideoRedo, when this option is enabled kmttg will start VideoRedo GUI to allow you to manually define the commercial cuts and save the output mpeg2 file with cuts with VideoRedo. kmttg will wait until you close the VideoRedo GUI before proceeding.
  * This is useful to be able to skip the time-consuming and often inaccurate *Ad Detect* step so you can define and generated mpeg2 file with commercials cut out and then let kmttg continue with the rest of the tasks automatically.
  * NOTE: It's expected that you use VideoRedo to output the cut file. You can use the default VideoRedo output file name with {{{" (02).mpg"}}} suffix or use the conventional {{{"_cut.mpg"}}} suffix when saving the output file in VideoRedo.
  * Prior to kmttg version 0p7f with this option enabled the commercial cut step was still done by kmttg, but there are certain VideoRedo settings that only work in GUI mode, such as audio boost, so it is more flexible to just output the file from VideoRedo instead.
  * NOTE: When using this option you normally want to disable *Ad Detect* task and enable *Ad Cut* task.

==Enable VideoRedo QS Fix video dimension filter==
  * For some mpeg files that change video resolutions VideoRedo cannot handle that properly and results in a *Video Dimensions Changed* error message when editing the file. The usual fix to that problem is manually bring up Quick Stream Fix utility in VideoRedo and then enable the *Enable Filters* check button and specify the video resolution you want to set. However being a manual step is very inconvenient. With this option set kmttg will automatically enable a video dimension filter when running *QS Fix* step. The video dimensions are automatically detected by kmttg with the help of ffmpeg. Thus this automates the whole process.

==Decrypt using VideoRedo instead of tivodecode==
  * Use VideoRedo QS Fix task to decrypt TiVo files instead of using *tivodecode*.
  * If you use QS Fix task anyway this helps save some time by skipping tivodecode step. This is also useful for Australia/New Zealand TiVos with mpeg2 Transport Stream TiVo files which cannot be decrypted by tivodecode.
  * NOTE: You must have minimum TiVo Desktop installation with *TiVoDirectShowFilter* installed for VideoRedo to be able to decrypt TiVo files. You can achieve this by first installing TiVo Desktop completely and specifying your MAK ID during installation. Once you verify you can play .TiVo files using Media Player then you can uninstall TiVo Desktop and use the option to retain capability to play TiVo files. This keeps TiVoDirectShowFilter.dll installed and registered which is all that is needed for VideoRedo to be able to decrypt TiVo files.

==Show VideoRedo encoding profiles==
  * This requires VideoRedo version TVSuite 4 or later (version 4.20.2.595 or later) to work.
  * When enabled this option will add built in and/or custom VideoRedo encoding profiles to the list of encoding options available for the *encode* task. kmttg queries VideoRedo for all the available encoding profiles to build this list but this only works with recent versions of TVSuite 4 as mentioned in bullet above.
  * NOTE: Starting with version v0p7n the procedure to obtain profiles from VideoRedo runs in the background and the Encoding Profile list in the GUI is only updated once that procedure has completed. It may take several seconds for the encoding profiles list in the GUT to be updated as a result. Previously kmttg would just hang while waiting for this procedure to complete resulting in a long start up time for kmttg GUI.

==Combine Ad Cut & Encode==
  * If enabled kmttg will combine the *Ad Cut* and *encode* tasks into 1 by using the selected VideoRedo encoding profile during the *Ad Cut* step. Note that this only works if you have a VideoRedo encoding profile selected, otherwise an error is generated and the Ad Cut task is aborted.

==Force QS Fix output to always be mpeg2 Program Stream==
  * If enabled this will force VideoRedo to output mpeg2 program stream format regardless of the input video file format. This is useful for example if you have TS downloads enabled but want to get mpeg2 program stream format output instead of mpeg2 transport stream.

==Allow multiple VideoRedo jobs at once==
  * If enabled allows multiple VideoRedo tasks to run at the same time. Enabling this option works around a bug in VideoRedo which does not allow more than 1 "silent" version of VideoRedo to run at once. With this option disabled VideoRedo tasks are restricted to one at a time only.
  * NOTE: Side effect of enabling this option is for each VideoRedo task the initial GUI will popup momentarily before hiding itself from view if you are running kmttg in GUI mode.

==<u>pyTivo tab</u>== 

==pyTivo.conf file==
  * Double click in text field to bring up browser to find and set full path to your pyTivo config file *pyTivo.conf* file. This is where information on available pyTivo shares and their directory locations is contained. If you intend to use the *push* task for pushing files to your Tivos via pyTivo specifying a valid pyTivo.conf file is required. Note that you should also make sure that tivo_username & tivo_password corresponding to your tivo.com login and password are set in this file which is a requirement for Tivo pushes. kmttg will check that those options are set in the file.

==pyTivo host name==
  * Host name of the machine you are running pyTivo server on. If it is the same machine as you are running kmttg then *localhost* is usually the right setting to use. Note that the port number is obtained by kmttg from the *pyTivo.conf* file.

==pyTivo push destination==
  * Set which TiVo you would like to send files to via pyTivo push.

==Files to push==
  * By default kmttg with *push* task enabled will only push the last video file in the sequence of tasks you enable for processing an entry. That corresponds to *last* setting of this option. You can change that behavior by using various settings for this option:
  * *mpegFile* - Push only {{{.mpg}}} file after decrypt step if enabled
  * *mpegFile_cut* - Push only {{{_cut.mpg}}} file after AdCut step if enabled
  * *encodeFile* - Push only encoded video file after encode step if enabled
  * *last* - Push only last video file in the task set (the default setting)
  * *all* - Push all available video files in the task set (except .TiVo files)

==<u>Autotune tab</u>==
Feature introduced in v0p7m release.
This configuration section is to setup kmttg to automatically tune both TiVo tuners to specified channels before initiating a download from a TiVo. If you have TiVo tune to channels you don't subscribe to or to music channels, this can improve the download speeds as it frees up more resources on the TiVo to handle the download.
  * This only works for Series 3 & 4 TiVos that have *Network Remote Control* option enabled.
  * You can enable *Network Remote Control* option for Series 3/4 TiVos as follows:<br>
      TiVo Central-Messages&Settings-Settings-Remote,CableCARD&Devices-Network Remote Control
  * You can specify 2 different channels to use under configuration - 1 for each tuner. Typically these would be channels you don't subscribe to or music channels so as to reduce load on your TiVo.
  * For each tune kmttg uses following sequence of button presses for the tune:<br>
     LIVETV,CLEAR,CHANNEL #,ENTER. There is a configurable wait time in seconds between tunes to give TiVo a chance to react to the network button pushes (see below).
  * *NOTE: You need to click on OK button if you adjust parameters for any of the TiVos in order to save the settings. You must click on OK button separately for each TiVo configuration.*
  * NOTE: If 1 or more tuners are recording at the time the dual channel change is attempted then the recordings will not be interrupted and the channel changing will fail. So obviously this feature is not useful if you have many suggestions recording all the time on your TiVos.

==TiVo to Autotune==
  * Select which TiVo you would like to configure or test for Autotune.

==Tune to specified channels before a download==
  * Enable or disable the autotune capability for the selected TiVo.

==Channel number for tuner 1==
  * Channel number to use for the first tuner. Both conventional integer only channel numbers are supported or OTA style xx-xx or xx.xx are supported. Typically you want this to be a channel you don't subscribe to or a music channel so as to reduce the CPU load on your TiVo which improves download speeds.

==Channel number for tuner 2==
  * Channel number to use for second tuner.

==Channel change interval (secs)==
  * Default is 5 seconds.
  * The interval of time in seconds to wait after the first channel tune before attempting the second channel tune. Depending on how responsive your TiVo is you may have to adjust this setting as needed to get successful dual channel tuning.

==Button press interval (msecs)==
  * Default is 1000 msecs (1 second)
  * Specifies interval of time in milliseconds to wait between network button commands that are sent to TiVo over network during autotune. Depending on responsiveness of your TiVo this may have to be adjusted so that it works properly.

==TEST==
  * Use this button to test autotune for the selected TiVo. Useful for testing the dual channel changing based on the current settings in the form.