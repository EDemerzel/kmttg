#labels Featured
=CONFIGURING KMTTG=
*This step is very important and must be run at least the first time you start kmttg.*

  * Start kmttg if you have not done so already.
  * From *File* pulldown menu select *Configure…*
  * Adjust settings according to your environment. Many of the 3rd party tools are installed automatically for Windows & Mac platforms (and auto-detected on Linux platforms if available), but some tools such as VideoRedo and t2extract are not setup by default and must be user defined if you have them installed and wish to use them.
  * If you did not specify *MAK* during first launch you should enter proper *MAK* value under *Other* tab and define *.TiVo* dir (where to save download .TiVo files) under *File Settings* tab.
  NOTE: As of version 0.6a kmttg will automatically detect any Tivos on your network and add them to Tivos list, but you can optionally add tivos yourself if you wish.

  NOTE: You can specify different output directories for .TiVo files, .mpg files and encoded files if you wish or you can set them all the same.

  NOTE: For file and directory fields you can double-click in the field to bring up a File Browser to help locate files/directories.

  * OK the form when you have completed your configuration. This will save your settings to config.ini file so they will be remembered next time you run kmttg.

==_Tivos tab_ (MANUALLY ENTERING TIVO NAMES AND IP NUMBERS)==
  * Starting with version 0.6e the configuration window now has tabs. Select the *Tivos* tab to see options related to your networked Tivos.
  * Starting with version 0.6a kmttg will automatically detect and add Tivos on your network, so you can choose to skip steps below that detail how to manually add tivos to kmttg.
  * Supply a Tivo name in the *Tivo Name* field and the associated Tivo IP number in the *Tivo IP#* field.
  EXAMPLE: *Tivo Name = Bedroom   Tivo IP# = 192.168.1.101*
  * You can find Tivo IP numbers for each of your Tivos as follows:
  Tivo Central—Messages&Settings—Settings—Phone&Network: IP addr
  * Click on *ADD* button to add the entry to the Tivos list
  * If you want to remove entries, then select them in the Tivos list and click on *DEL* button.

==Look for Tivos on network==
  * If this option is enabled then kmttg will check for Tivo broadcast beacons to automatically detect Tivos on your network. You can optionally choose to disable this feature and add tivos manually to kmttg if you wish.

==_File Settings_ tab==

==Remove .TiVo file after decrypt==
  * Enable this option if you would like kmttg to remove .TiVo files automatically once they have been successfully decrypted to .mpg format.

==Remove .edl & .mpg files after comcut==
  * If you use comcut you can enable this option if you would like kmttg to remove .edl & .mpg files automatically once comcut completes succesfully.

==Remove .mpg file after encode==
  * If you use encode you can enable this option if you would like kmttg to remove .mpg files automatically once they have been successfully re-encoded.

==Create sub-folder for each download==
  * Enable this option if you would like kmttg to create a sub-folder for each show to be processed. The name of the folder will be the same as the file format you defined but without any file extension.

==Check Available Disk Space==
  * If this option is enabled then kmttg will check that destination drive has more than the space available defined in *Min req space (GB)* field before running jobs.

==File Naming==
  * This defines how file names will look for downloaded shows. Certain keywords are provided which you specify within square brackets that will be substituted accordingly. The choices for those you can see in the *Available keywords* cyclic. Choosing an entry from *Available keywords* will insert it in the File Naming field. You can use almost any other characters you want (*avoid quotes!*) and arrange the keywords in any order you like.
  * EXAMPLE:  Let’s say you have a recorded show as follows:
*Mon 3/24/2008 at 8:00pm called “The Big Bang Theory – The Loobenfeld Decay” from channel 702=KCBSDT*<br>
`Keywords in this example are:`<br>
`[title] = The Big Bang Theory – The Loobenfeld Decay`<br>
`[mainTitle] = The Big Bang Theory`<br>
`[episodeTitle] = The Loobenfeld Decay`<br>
`[channelNum] = 702`<br>
`[channel] = KCBSDT`<br>
`[min] = 00`<br>
`[hour] = 20`<br>
`[wday] = Mon`<br>
`[mday] = 24`<br>
`[month] = Mar`<br>
`[monthNum] = 03`<br>
`[year] = 2008`<br>

So continuing with above example, if I set:<br>
*`File Naming = [title] (Recorded [month] [mday],[year],[channel])`*<br>
The `.TiVo` file name would become:<br>
*`The Big Bang Theory – The Loobenfeld Decay (Recorded Mar 17,2008,KABCDT).TiVo`*<br>

The `[/]` keyword is a folder separator which allows you to create custom sub-folder names as part of the output file definition. Continuing above example:<br>
*`File Naming = [mainTitle][/][year]_[monthNum]_[mday] [episodeTitle]`*<br>
The `.TiVo` file name would become (using Windows folder structure note the resulting sub-folder structure):<br>
*`The Big Bang Theory\2008_03_24 The Loobenfeld Decay.TiVo`*

==Advanced File Naming==

By request some more advanced keyword processing was introduced to allow for conditional text.
  * You can define multiple space separated fields within square brackets.
  * Fields surrounded by quotes are treated as literal text.
  * A single field with no quotes should be supplied which represents a conditional keyword
  * If that keyword is available for the show in question then the keyword value along with any literal text surrounding it will be included in file name.
  * If the keyword evaluates to null then the entire advanced keyword becomes null. 
  * For example:<br>
`[mainTitle]`*`["_Ep#" EpisodeNumber]`*`_[wday]_[month]_[mday]`<br>

The advanced keyword is highlighted in bold and signifies only include `“_Ep#xxx”` if `EpisodeNumber` exists for the show in question. `“_Ep#”` is literal string to which the evaluated contents of `EpisodeNumber` keyword are appended. If `EpisodeNumber` does not exist then the whole advanced keyword evaluates to empty string.

==FILES Default Path==
  * Defines where you would like the file browser to start from in FILES mode.
  * NOTE: You can use this option without having any Tivos defined if you wish.

==.TiVo Output Dir==
  * REQUIRED if you plan to download files from Tivo Now Playing lists.
  * This defines where your Tivo Now Playing List files will be downloaded to.
  * NOTE: Make sure you have plenty of space here

==.mpg Output Dir==
  * REQUIRED if you plan to decrypt .TiVo files
  * This defines where the decrypted .mpg files will be saved
  * NOTE: Make sure you have plenty of space here
  * NOTE: This can be same as .TiVo Output Dir

==.mpg Cut Dir==
  * REQUIRED if you plan to run the comcut step
  * This defines where the comcut commercial stripped .mpg file will be saved
  * NOTE: Make sure you have plenty of space here
  * NOTE: This can be same as .TiVo Output Dir

==Encode Output Dir==
  * REQUIRED if you plan to re-encode .mpg files to other formats
  * This defines where re-encoded files will be saved
  * NOTE: Make sure you have plenty of space here
  * NOTE: This can be same as .TiVo Output Dir or .mpg Output Dir

==_Programs_ tab==

==curl==
  * REQUIRED if you plan to download files from Tivo Now Playing lists.
  * Adjust to match the full path to the curl binary if you plan to download files
  * NOTE: For Windows users who installed the tools zip file this should not have to change.
  * NOTE: Most Linux installations already have curl installed under */usr/bin/curl*

==tivodecode==
  * REQUIRED if you plan to decrypt .TiVo files to .mpg
  * Adjust to match the full path to the tivodecode binary.
  * NOTE: For Windows users who installed the tools zip file this should not have to change.

 ==mencoder (optional)==
  * REQUIRED if you plan to enable “comcut” in kmttg.
  * Supply the full path to the mencoder binary.
  * mencoder is used if you select the “comcut” option in kmttg to automatically cut out commercial segments detected by comskip.
  * NOTE: You are better off using an mpeg2 editor if you want precise cuts and in sync audio/video. The combination of comskip and comcut can work well for some shows but not well at all for others. On occasion I find mencoder can produce out of sync audio/video files.

==ffmpeg (optional)==
  * If you plan on re-encoding mpeg2 files to a different format using kmttg and ffmpeg encoding profiles then you should define here the full path to ffmpeg here. All the kmttg pre-defined encoding profiles starting with “ff_” prefix use ffmpeg as their encoding engine.
  * NOTE: For Windows users ffmpeg is included as part of the tools zip file.
 
==handbrake (optional)==
  * If you plan on re-encoding mpeg2 files to a different format using kmttg and handbrake encoding profiles then you should define here the full path to HandBrakeCLI here. All the kmttg pre-defined encoding profiles starting with “hb_” use handbrake as their encoding engine.
  * NOTE: For Windows users handbrake is included as part of the tools zip file.

==comskip (optional)==
  * REQUIRED if you plan to use comskip.
  * comskip is a public domain program that can scan an mpeg2 file and detect commercials. With default configuration it will produce a .edl file which can be fed to *mencoder* to cut out detected commercial segments.
  * NOTE: comskip can be configured to output several other files too such as a bookmark .mls file for Womble Mpeg Video Wizard or a cut file for VideoRedo. Consult comskip documentation for details.
  * NOTE: Accuracy varies greatly depending on the show. Comskip is most useful to use as an initial guess as to where cut points should be made. Ideally you should then use Womble, VRD or similar editor to adjust the cut points as needed.

==comskip.ini (optional)==
  * REQUIRED if you plan to use comskip.
  * Supply the full path to the comskip.ini file you wish to use. Comskip has many configuration options and you may want to use different .ini files for different shows for best results.

==t2extract==
  * For windows systems if you specify the full path to T2Sami *t2extract.exe* program this will enable the *captions* option to extract closed captions from video files.

==AtomicParsley==
  * If you specify the full path to AtomicParsley executable then some meta data information will be automatically added to mp4 files following encode step.
  * NOTE: This will only work if you have pyTivo metadata available for the file since kmttg will look for file.mp4.txt file to get information it needs for AtomicParsley run.

==VideoRedo path==
  * If you have VideoRedo program available you can supply the path to your VideoRedo installation directory to enable the “VRD QS fix” option which stands for `VideoRedo` Quickstream Fix. If you plan on any further processing of .mpg files such as cutting out commercials or re-encoding to different format it’s useful to run the file through VRD QS fix first to fix any potential glitches in the .mpg file that may cause issues. Note that “VRD QS fix” will only be enabled once you supply a valid path to VideoRedo installation. By doing so kmttg will also use VideoRedo instead of mencoder for the comcut step. VideoRedo does a much better job of cutting out commercials while keeping proper audio/video sync.
  * Example path setting (on Vista):
  `C:\Program Files (x86)\VideoRedoPlus`

==custom command==
  * Here you can setup any script you want to run as a post-processing step to all other tasks. You can use certain pre-defined keywords in square brackets as arguments to your script if you wish which kmttg will replace with the associated full path file names. The supported keywords are listed in the *Available file args* cyclic.

==Use VideoRedo AdScan instead of comskip==
  * If you have VideoRedo configured for use by kmttg then enabling this option instructs kmttg to use *VideoRedo AdScan* instead of comskip program for the comskip step.

==Use VideoRedo GUI to review detected commercials==
  * If you have VideoRedo configured for use by kmttg then enabling this option instructs kmttg to start VideoRedo GUI following the *Ad Detect* job so that you can manually inspect/correct the detected commercial segments. If you do make changes be sure to save the changes to the same VPrj file before exiting VideoRedo (*Ctrl-P* shortcut). kmttg will wait until you close VideoRedo GUI before proceeding with next set of jobs.
  NOTE: This setting only applies to GUI mode. In auto transfers mode this setting has no effect.

==_Other_ tab== 

==MAK==
  * REQUIRED if you plan to download files from Tivo Now Playing lists.
  * Your Tivo Media Access Key. You can find the number on any of your Tivos:
  Tivo Central—Messages&Settings—Account&System Information—Media Access Key

==active job limit==
  * Limits the number of CPU intensive jobs that can kmttg can run in parallel to this setting (defaults to 2). If you want to allow more CPU intensive jobs to run at the same time (for example if you have a mult-core processor) you can increase this limit accordingly. Be careful not to overwhelm your computer by setting this number too high.

==encoding cpu cores===
  * Specify the number of cpu cores to use for encoding jobs. If you have a multi-core machine this can speed up encoding jobs quite significantly. Consider this setting and *active job limit* when deciding what number to use here. Setting this too high may really slow down your machine for other tasks running in parallel.

==wan http port (optional)==
  * Set this option only if you plan to use kmttg over a WAN instead of your local LAN. By default http port 80 is used to download shows from the Tivos on the LAN, but from WAN side you will have to setup port forwarding in your router, and often service providers do not allow you to use port 80.
  * NOTE: For Now Playing List retrieval https port 443 also should be port forwarded to your Tivo port 443 in your router.

==toolTip timeout (secs)==
  * Set the amount of time that a toolTip will display before disappearing.

==Display toolTips==
  * Enable or disable mouse over toolTips which are text tips that appear when you move the mouse over an item in the GUI.